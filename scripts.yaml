play_switch_on_tv:
  sequence:
  - choose:
    - alias: IF casting, stop!
      conditions:
      - condition: template
        alias: Currently casting
        value_template: '{{states(''media_player.living_room_tv'') != ''off''}}'
      sequence:
      - service: media_player.media_stop
        target:
          entity_id: media_player.living_room_tv
      - delay:
          hours: 0
          minutes: 0
          seconds: 0
          milliseconds: 500
  - service: remote.turn_on
    target:
      entity_id: remote.harmonyjorik
    data:
      activity: Nintendo
  mode: single
  alias: Play Switch on TV
  icon: mdi:nintendo-switch
toggle_vacuum:
  alias: Toggle Vacuum
  sequence:
  - if:
    - condition: state
      entity_id: vacuum.kevin
      state: docked
    then:
    - service: automation.trigger
      data:
        skip_condition: true
      target:
        entity_id: automation.daily_vacuuming
    else:
    - service: vacuum.return_to_base
      data: {}
      target:
        entity_id: vacuum.xiaomi_vacuum_cleaner
      alias: Return kevin to dock
  mode: single
  icon: mdi:robot-vacuum
feed_portion:
  alias: Feed portions
  fields:
    nr:
      required: true
      name: Portions
      description: Nr of portions to give (of 7 gram)
      selector:
        number:
          min: 1
          max: 3
          step: 1
    delay:
      required: true
      name: Delay
      description: Delay between portions
      selector:
        duration:
  sequence:
  - repeat:
      count: '{{nr}}'
      sequence:
      - service: select.select_option
        data:
          option: START
        target:
          entity_id: select.de_foodzi_unit_feed
        enabled: true
      - if:
        - condition: not
          conditions:
          - condition: template
            value_template: '{{ repeat.last }}'
        then:
        - delay:
            hours: '{{delay[''hours'']}}'
            minutes: '{{delay[''minutes'']}}'
            seconds: '{{delay[''seconds'']}}'
            milliseconds: '{{delay[''milliseconds'']}}'
        else:
        - service: logbook.log
          data:
            name: skipped
            message: skipped
    alias: Give x portions with a delay
  mode: single
  icon: mdi:cat
start_vacuum:
  alias: Start Vacuum
  sequence:
  - service: xiaomi_miio.vacuum_clean_segment
    data:
      segments:
      - 18
      - 17
      - 19
    enabled: true
    target:
      entity_id: vacuum.kevin
    alias: Clean the livingroom, kitchen and hallway
  - service: input_datetime.set_datetime
    data:
      datetime: '{{as_timestamp(now()) | timestamp_custom(''%Y-%m-%d %H:%M:00'')}}'
    target:
      entity_id: input_datetime.vacuum_last_run
    alias: Reset the last run entity
  - service: notify.mobile_app_cph2399
    data:
      message: Started the Vacuum!
      title: Vacuum
    enabled: false
    alias: Send a notification
  mode: single
  icon: mdi:robot-vacuum
empty_kevin:
  alias: Empty Kevin
  use_blueprint:
    path: homeassistant/confirmable_notification.yaml
    input:
      notify_device: d5ba21a97c160a3f6bd86a06d9a51a0e
      title: Kevin is full!
      message: You should empty Kevin! It has run {{ states("counter.vacuum_cleans")
        }} times since last empty
      confirm_text: Emptied
      confirm_action:
      - service: counter.reset
        data: {}
        target:
          entity_id: counter.vacuum_cleans
      dismiss_text: Nope...
  icon: mdi:trash-can
