- id: '1600774245795'
  alias: 'Media Center: turn on'
  description: Turn on the mediacenter to the correct activity
  trigger:
  - platform: state
    entity_id:
    - media_player.living_room_tv
    to: playing
    for:
      hours: 0
      minutes: 0
      seconds: 1
  condition:
  - condition: template
    value_template: '{{state_attr(use_remote, ''current_activity'') != harmony_activity}}'
  action:
  - service: remote.turn_on
    data:
      entity_id: '{{use_remote}}'
      activity: '{{harmony_activity}}'
  - if:
    - condition: template
      value_template: '{{state_attr(player_id, ''volume_level'') > player_volume +
        0.1 or state_attr(player_id, ''volume_level'') < player_volume - 0.1}}'
    then:
    - delay:
        hours: 0
        minutes: 0
        seconds: 3
        milliseconds: 0
    - service: media_player.volume_set
      data:
        entity_id: '{{player_id}}'
        volume_level: '{{player_volume}}'
  mode: single
  variables:
    use_remote: remote.harmonyjorik
    player_id: media_player.living_room_tv
    current_app: '{{state_attr(player_id, ''app_name'') | lower}}'
    app_mapping:
      f1tv:
        activity: Tv
      netflix:
        activity: Tv
      npo start:
        activity: Tv
      spotify:
        activity: Stereo
        volume: 0.8
      npoplayer:
        activity: Tv
    app_map: '{{app_mapping[current_app] | default({})}}'
    harmony_activity: '{{app_map.activity | default("Tv")}}'
    player_volume: '{{app_map.volume | default(1.0)}}'
- id: '1600780656956'
  alias: 'Media Center: turn off'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.living_room_tv
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 10
  - platform: state
    entity_id:
    - media_player.living_room_tv
    to: idle
    for:
      hours: 0
      minutes: 0
      seconds: 30
  condition: []
  action:
  - service: remote.turn_off
    entity_id: remote.harmonyjorik
    data: {}
  mode: single
- id: '1602060895444'
  alias: 'Backup: HA config'
  description: Backup the home assistant config files on sundays
  trigger:
  - platform: state
    entity_id:
    - schedule.backup_ha
    to: 'on'
  condition: []
  action:
  - service: shell_command.git_commit
    data: {}
  - service: shell_command.git_push
    data: {}
  mode: single
- id: '1603394623458'
  alias: 'Lights Hall: Keep on'
  description: Keep the motion controlled light in the hallway on.
  trigger:
  - platform: state
    entity_id: light.hall_light
    to: 'off'
  - platform: state
    entity_id: automation.keep_hall_light_on
    to: 'on'
  condition: []
  action:
  - service: light.turn_on
    data:
      brightness: '{{ states("input_number.hall_brightness") | int }}'
    entity_id: light.hall_light
  mode: single
- id: '1608038614647'
  alias: Goodmorning
  description: Switch on relevant stuff
  trigger:
  - platform: time
    at: '6:45'
  condition:
  - condition: state
    entity_id: input_boolean.vacation_mode
    state: 'off'
  action:
  - scene: scene.day
  - condition: numeric_state
    entity_id: sun.sun
    attribute: elevation
    above: '0'
  - service: input_number.set_value
    target:
      entity_id: input_number.hall_brightness
    data:
      value: 255
  mode: single
- id: '1608561879306'
  alias: 'Lights Livingroom: Turn on (home)'
  description: ''
  trigger:
  - platform: state
    entity_id: light.hall_light
    from: 'off'
    to: 'on'
    id: HallLightOn
  condition:
  - condition: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: '10'
  - condition: time
    after: '12:00'
  - condition: state
    entity_id: light.livingroom_lights
    state: 'off'
  - condition: state
    entity_id: group.humans
    state: not_home
  action:
  - service: light.turn_on
    data:
      brightness_pct: 100
    entity_id: light.livingroom_lights
  - service: notify.mobile_app_cph2399
    data:
      title: Lights are now on
      message: Turned the lights on because someone arrived home.
  mode: single
- id: '1608806095722'
  alias: 'Lights Livingroom:  dim light'
  description: ''
  use_blueprint:
    path: lights/light_dimming.yaml
    input:
      end_percentage: '15'
      start_percentage: '100'
      dim_start_time: '21:00:00'
      dim_end_time: '23:30:00'
      output_light: light.livingroom_lights
      start_brightness: 255
      end_brightness: 38
- id: '1612192541242'
  alias: 'Lights Livingroom: Turn on (sun)'
  description: Turn on the livingroom lights if the sun goes under
  use_blueprint:
    path: lights/light_enable_sun.yaml
    input:
      duration_min: 50
      elevation_offset: '10'
      output_light: light.livingroom_lights
      end_brightness: '255'
      start_brightness: '38'
      home_group: group.humans
- id: '1622458308421'
  alias: 'Https: Refresh'
  description: ''
  trigger:
  - platform: time
    at: input_datetime.https_timer
    enabled: false
  - platform: time
    at: 03:00:00
  condition:
  - condition: time
    weekday:
    - sun
  action:
  - service: shell_command.install_openssh
    data: {}
    enabled: false
  - service: shell_command.recrypt
    data: {}
    enabled: false
  - service: input_datetime.set_datetime
    data:
      date: '{{ now().date() + timedelta(days=90) }}'
    target:
      entity_id: input_datetime.https_timer
    enabled: false
  - service: hassio.addon_restart
    metadata: {}
    data:
      addon: core_letsencrypt
    alias: Request New Certificate
  - service: notify.mobile_app_cph2399
    data:
      message: Restarting HA after encryption refresh.
      title: Encryption refresh
    alias: Notify certificate renewal
  - delay:
      hours: 0
      minutes: 15
      seconds: 0
      milliseconds: 0
  - service: hassio.host_reboot
    data: {}
    alias: Restart the system
  mode: single
- id: '1623509943578'
  alias: 'Plant: Moisture'
  description: Warn if the plant should be given water
  trigger:
  - platform: time
    at: '17:00'
  condition:
  - condition: numeric_state
    entity_id: sensor.flower_care_moisture
    below: '20'
  action:
  - service: notify.mobile_app_cph2399
    data:
      message: 'The plant should be given water! Moisture: {{states("sensor.miflora_moisture")}}'
  mode: single
- id: '1624542421853'
  alias: 'Vacuum: Ensure docked'
  description: Ensure that the vacuum goes to the docking station
  trigger:
  - platform: time
    at: '11:00:00'
  condition:
  - condition: state
    entity_id: vacuum.kevin
    state: error
  action:
  - service: vacuum.return_to_base
    data: {}
    target:
      entity_id: vacuum.kevin
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - condition: state
    entity_id: vacuum.kevin
    state: error
  - service: notify.mobile_app_cph2399
    data:
      message: Kevin has not reached the docking station
      title: Kevin is lost :-(
  mode: single
- id: '1638808746106'
  alias: 'Lights Livingroom: Morning'
  description: ''
  trigger:
  - platform: state
    entity_id: light.livingroom_lights
    from: 'off'
    to: 'on'
  condition:
  - condition: time
    after: 06:00
    before: '14:00:00'
  - condition: numeric_state
    entity_id: light.livingroom_lights
    attribute: brightness
    above: 0
    below: 125
  action:
  - service: light.turn_on
    target:
      entity_id: light.livingroom_lights
    data:
      brightness: 255
      transition: 15
  mode: single
- id: '1639509271355'
  alias: 'CV: Outside Temperature Check'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.cv_temperature
    below: '5'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - service: notify.mobile_app_cph2399
    data:
      message: The outside CV temperature is too low!
      title: CV temp error!
  - service: automation.turn_off
    data:
      stop_actions: false
    target:
      entity_id: automation.cv_temperature
  mode: single
- id: '1640700149575'
  alias: 'CV: Nobody Home'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - group.humans
    for:
      hours: 0
      minutes: 10
      seconds: 0
    to: not_home
  condition:
  - condition: state
    entity_id: binary_sensor.cv_time_schedule
    state: 'on'
    enabled: false
  - condition: numeric_state
    entity_id: climate.cv_ketel
    attribute: temperature
    above: input_number.cv_gone
  action:
  - service: climate.set_temperature
    target:
      entity_id: climate.cv_ketel
    data:
      temperature: '{{states(''input_number.cv_gone'')|float}}'
  mode: single
- id: '1641898202596'
  alias: 'CV: Family Home'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - group.humans
    to: home
  condition:
  - condition: state
    entity_id: binary_sensor.cv_time_schedule
    state: 'off'
  action:
  - if:
    - condition: state
      entity_id: person.nicole_verbeek
      state: home
    then:
    - service: climate.set_temperature
      data:
        temperature: 0
      target:
        entity_id: climate.cv_ketel
    else:
    - service: climate.set_temperature
      data:
        temperature: 19
      target:
        entity_id: climate.cv_ketel
  mode: single
- id: '1642757590717'
  alias: 'Media Center: Nobody Home'
  description: ''
  trigger:
  - platform: state
    entity_id: group.humans
    to: not_home
  condition:
  - condition: template
    value_template: '{{not is_state(''media_player.living_room_tv'', ''off'')}}'
  action:
  - service: media_player.media_stop
    target:
      entity_id: media_player.living_room_tv
  mode: single
- id: '1661516278556'
  alias: 'CO2: Monitor livingroom'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.mh_z19_co2_value
    for:
      hours: 0
      minutes: 10
      seconds: 0
    above: '1000'
  condition: []
  action:
  - service: notify.mobile_app_cph2399
    data:
      title: CO2 level too high!
      message: The CO2 level is above 1000!
  - wait_template: '{{ int(states("sensor.mh_z19_co2_value")) < 800 }}'
    continue_on_timeout: true
  - service: notify.mobile_app_cph2399
    data:
      title: CO2 level is okay
      message: The CO2 level is below 800 again.
  max_exceeded: silent
  mode: single
- id: '1666266988290'
  alias: 'CV: Nicole gone'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.nicole_verbeek
    to: not_home
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: group.humans
    state: home
  - condition: numeric_state
    entity_id: climate.cv_ketel
    attribute: temperature
    above: 19
  action:
  - service: climate.set_temperature
    data:
      temperature: 19
    target:
      entity_id: climate.cv_ketel
  mode: single
- id: '1666267273499'
  alias: 'CV: Time triggered schedule reset'
  description: ''
  trigger:
  - platform: time
    at: '23:10:00'
  condition:
  - condition: state
    entity_id: binary_sensor.cv_time_schedule
    state: 'off'
  action:
  - service: climate.set_temperature
    data:
      temperature: 0
    target:
      entity_id: climate.cv_ketel
  mode: single
- id: '1666272604145'
  alias: 'CV: Nicole home'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - person.nicole_verbeek
    to: home
  condition:
  - condition: state
    entity_id: binary_sensor.cv_time_schedule
    state: 'off'
  action:
  - service: climate.set_temperature
    data:
      temperature: 0
    target:
      entity_id: climate.cv_ketel
  mode: single
- id: '1688547349397'
  alias: 'Vacuum: Start Nobody Home'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - group.humans
    to: not_home
  condition:
  - condition: time
    after: 09:00:00
    before: '21:30:00'
  - condition: state
    entity_id: binary_sensor.allow_vacuum_to_run
    state: 'on'
  action:
  - service: script.start_vacuum
    data: {}
  mode: single
- id: '1688713069146'
  alias: 'Vacuum: Count cleans'
  description: Count nr. of cleans since last empty
  trigger:
  - platform: device
    device_id: c2393df80bea252caaa6c0b24fef5e75
    domain: vacuum
    entity_id: aa1b199edd1f40e097d8eb5c23a6d611
    type: cleaning
    for:
      hours: 0
      minutes: 15
      seconds: 0
  condition: []
  action:
  - service: counter.increment
    data: {}
    target:
      entity_id: counter.vacuum_cleans
  mode: single
- id: '1688713787013'
  alias: 'Vacuum: Notify Vacuum Full'
  description: Notify when the vacuum needs to be emptied
  trigger:
  - platform: state
    entity_id:
    - counter.vacuum_cleans
    to:
  condition:
  - condition: numeric_state
    entity_id: counter.vacuum_cleans
    above: 4
  action:
  - service: notify.mobile_app_cph2399
    alias: Ask Jorik to empty the vacuum
    data:
      data:
        actions:
        - action: VACUUM_EMPTIED
          title: Emptied
        - action: VACUUM_IGNORED
          title: Cancel
      message: The vacuum has now run {{states('counter.vacuum_cleans')}} times since
        last clean!
    enabled: false
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      context:
        user_id:
        - 9f03360d711f4db08a2d4b97a271f6e8
      event_data:
        action: VACUUM_EMPTIED
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: VACUUM_IGNORED
      context:
        user_id:
        - 9f03360d711f4db08a2d4b97a271f6e8
    - platform: event
      event_type: mobile_app_notification_cleared
      context:
        user_id:
        - 9f03360d711f4db08a2d4b97a271f6e8
    alias: Wait for response
    enabled: false
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == ''VACUUM_EMPTIED'' }}'
      sequence:
      - service: counter.reset
        data: {}
        target:
          entity_id: counter.vacuum_cleans
        enabled: true
    alias: Clear counter if emptied
    enabled: false
  - service: script.empty_kevin
    data: {}
  mode: parallel
  max: 10
- id: '1693671628676'
  alias: 'Vacuum: Start Enforce'
  description: ''
  trigger:
  - platform: time
    at: '10:30:00'
  condition:
  - alias: Check last clean is 2 days ago
    condition: template
    value_template: '{{ now() > ((states(''input_datetime.vacuum_last_run'') | as_datetime
      | as_local) + timedelta(days=4)) }}

      '
  action:
  - service: script.start_vacuum
    data: {}
  mode: single
- id: '1706179107566'
  alias: 'Vacuum: Clean grit'
  description: Cleaning the area before the kattenbak
  trigger:
  - platform: time
    at: '12:50:00'
  - platform: time
    at: 07:30:00
  - platform: time
    at: '22:00:00'
  condition:
  - condition: state
    entity_id: group.humans
    state: home
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - condition: state
    entity_id: vacuum.kevin
    state: docked
  action:
  - service: xiaomi_miio.vacuum_clean_zone
    data:
      repeats: 1
      zone:
      - - 29500
        - 27500
        - 30350
        - 28600
    target:
      entity_id: vacuum.kevin
  mode: single
- id: '1717400577617'
  alias: 'Lights hall: dim lights'
  description: Dim the lights of the hall
  use_blueprint:
    path: lights/light_dimming.yaml
    input:
      dim_start_time: '21:00:00'
      dim_end_time: '22:30:00'
      output_light: light.hall_light
      start_brightness: 180
      end_brightness: 3
- id: '1717401197704'
  alias: 'Lights hall: turn on (sun)'
  description: Turn on the hall lights when the sun goes down
  use_blueprint:
    path: lights/light_enable_sun.yaml
    input:
      elevation_offset: 10
      duration_min: 50
      home_group: group.humans
      output_light: light.hall_light
      end_brightness: 180
- id: '1717401408625'
  alias: 'Goodnight: Lights hall'
  description: Turn off the lights when going to bed
  trigger:
  - platform: state
    entity_id:
    - light.livingroom_lights
    to: 'off'
  condition:
  - condition: time
    after: '22:00:00'
  - condition: state
    entity_id: light.hall_light
    state: 'on'
  action:
  - alias: Flash the hall light
    service: light.turn_on
    target:
      entity_id: light.hall_light
    data:
      flash: short
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: light.hall_light
    alias: Turn off the hall light
  mode: single
- id: '1717505260925'
  alias: 'Lights: away - Turn off'
  description: Turn off all lights when nobody is home
  trigger:
  - platform: state
    entity_id:
    - group.humans
    to: not_home
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition: []
  action:
  - service: light.turn_off
    metadata: {}
    data: {}
    target:
      entity_id:
      - light.hall_light
      - light.livingroom_lights
    alias: Turn off all lights
  mode: single
