blueprint:
  name: Lights on (home)
  description: Turn on light if someone is coming home
  domain: automation
  
  input:
    # Percentages input
    start_pct:
      name: Start Percentage.
      description: The starting percentage (at elevation).
      default: 100
      selector:
        number:
          min: 0
          max: 100
    end_pct:
      name: End Percentage.
      description: The end percentage (at dim end time).
      default: 15
      selector:
        number:
          min: 0
          max: 100

    # Dim timing inputs          
    dim_start_time:
      name: Dim start time.
      description: Start time of dimming lights on lights.
      selector:
        time:
    dim_end_time:
      name: Dim end time.
      description: End time of dimming lights on lights.
      selector:
        time:
        
    # Start conditions input
    start_elevation:
      name: Start elevation
      description: Start turning on the lights if below this sun elevation
      selector:
        number:
          min: 0
          max: 100      

    # Relevant home person(s)
    input_person:
      name: Relevant person
      description: Person or group to trigger on when coming home
      selector:
        entity:
        
    # Light to turn on
    output_light:
      name: Output Light
      description: Light to turn on when coming home.
      selector:
        entity:
          domain: light
       

variables:
  start_time: !input dim_start_time
  t_start: '{{as_timestamp(now().strftime(''%Y-%m-%d'') + '' '' + start_time)}}'
  end_time: !input dim_end_time
  t_end: '{{as_timestamp(now().strftime(''%Y-%m-%d'') + '' '' + end_time)}}'
  t_now: '{{as_timestamp(now())}}'
  t_diff_end: '{{t_end - t_now}}'
  enable_pct: >
    {% if t_now < t_start %}
      !input start_pct
    {% elif t_now > end_time %}
      !input end_pct
    {% else %}
      {{begin_pct + (t_now - t_start) / (t_end - t_start) * (end_pct - begin_pct)}}
    {% endif %}

trigger:
- platform: state
  entity_id: !input input_person
  to: home
  
condition:
- condition: state
  entity_id: !input output_light
  state: 'off'
- condition: numeric_state
  entity_id: sun.sin
  attribute: elevation
  below: !input start_elevation

action:
- service: light.turn_on
  entity_id: !input output_light
  data:
    brightness_pct: '{{enable_pct|float}}'
- condition: template
  value_template: '{{t_diff_end > 0}}'
- service: light.turn_on
  entity_id: !input output_light
  data:
    brightness_pct: !input end_pct
    transition: '{{t_diff_end}}'